
# Persistent Volume Claim (PVC) 설정 - NAS CSI 스토리지
# 이 PVC는 "nas-csi-pvc"라는 이름으로 정의되며, 500Gi의 NAS 스토리지를 요청합니다.
# nks-nas-csi 스토리지 클래스를 사용하여 ReadWriteMany 접근 모드를 지정합니다.
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nas-csi-pvc  # PVC의 이름
spec:
  accessModes:
    - ReadWriteMany  # 여러 노드에서 동시에 읽기/쓰기가 가능
  resources:
    requests:
      storage: 500Gi  # 요청하는 스토리지 크기
  storageClassName: nks-nas-csi  # 사용할 NAS 스토리지 클래스

---
# 첫 번째 Pod 정의
# 이 Pod는 "my-csi-app-1"이라는 이름으로 정의되며, busybox 이미지를 사용합니다.
# PVC를 마운트하여 NAS 스토리지를 "/data" 경로에 마운트합니다.
kind: Pod
apiVersion: v1
metadata:
  name: my-csi-app-1  # 첫 번째 Pod의 이름
spec:
  containers:
    - name: my-frontend  # 컨테이너의 이름
      image: busybox  # 사용할 컨테이너 이미지 (busybox)
      volumeMounts:
        - mountPath: "/data"  # NAS 볼륨이 마운트될 경로
          name: my-volume  # 볼륨의 이름
      command: [ "sleep", "1000000" ]  # 컨테이너가 종료되지 않도록 sleep 명령 실행
  volumes:
    - name: my-volume  # 볼륨의 이름
      persistentVolumeClaim:
        claimName: nas-csi-pvc  # 앞서 정의한 NAS PVC를 참조

---
# 두 번째 Pod 정의
# 이 Pod는 "my-csi-app-2"이라는 이름으로 정의되며, busybox 이미지를 사용합니다.
# PVC를 마운트하여 NAS 스토리지를 "/data" 경로에 마운트합니다.
apiVersion: v1
kind: Pod
metadata:
  name: my-csi-app-2  # 두 번째 Pod의 이름
spec:
  containers:
    - name: my-frontend  # 컨테이너의 이름
      image: busybox  # 사용할 컨테이너 이미지 (busybox)
      volumeMounts:
        - mountPath: "/data"  # NAS 볼륨이 마운트될 경로
          name: my-volume  # 볼륨의 이름
      command: [ "sleep", "1000000" ]  # 컨테이너가 종료되지 않도록 sleep 명령 실행
  volumes:
    - name: my-volume  # 볼륨의 이름
      persistentVolumeClaim:
        claimName: nas-csi-pvc  # 앞서 정의한 NAS PVC를 참조

